/*
Theme Name: wdunderscores
Theme URI: https://wdunderscores.com
Author: WebDevStudios
Author URI: https://webdevstudios.com
Description: A spiffy new theme for wdunderscores.com by Greg Rickaby based on wd_s
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: wdunderscores
Tags: custom

This theme, like WordPress, is licensed under the GPL.

Based on Underscores http://underscores.me/, (C) 2012-2016 Automattic, Inc.

Normalizing styles have been helped along thanks to the fine work of
Bo-Yi Wu (https://github.com/appleboy/), Nicolas Gallagher (https://github.com/necolas), and Jonathan Neal (https://github.com/jonathantneal).
*/
html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

body {
  -webkit-backface-visibility: hidden;
}

.animated {
  -webkit-animation-duration: 0.35s;
  animation-duration: 0.35s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.animated.hinge {
  -webkit-animation-duration: 0.7s;
  animation-duration: 0.7s;
}

.animated.bounceIn, .animated.bounceOut {
  -webkit-animation-duration: 0.2625s;
  animation-duration: 0.2625s;
}

.animated.flipOutX, .animated.flipOutY {
  -webkit-animation-duration: 0.2625s;
  animation-duration: 0.2625s;
}

@-webkit-keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
  }
}

@keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
            transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown;
}

html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  background: #ffffff;
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

a {
  background-color: transparent;
}

a:active, a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

body,
button,
input,
select,
textarea {
  color: #111111;
  font-family: "Open Sans", sans-serif;
  line-height: 1.625;
}

p {
  margin: 0 0 1.5rem 0;
}

b,
strong {
  font-weight: 700;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

blockquote,
q {
  margin: 0 1.5rem;
  quotes: "" "";
}

blockquote:before, blockquote:after,
q:before,
q:after {
  content: "";
}

address {
  margin: 0 0 1.5rem 0;
}

pre {
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: 0.9375rem;
  line-height: 1.625;
  margin: 0 0 1.5rem;
  max-width: 100%;
  overflow: auto;
  padding: 1.5rem;
}

code,
kbd,
tt,
var {
  font-family: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
  font-size: 0.9375rem;
}

abbr,
acronym {
  border-bottom: 1px dotted #666666;
  cursor: help;
}

mark,
ins {
  text-decoration: none;
}

sup,
sub {
  font-size: 75%;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  bottom: 1ex;
}

sub {
  top: 0.5ex;
}

small {
  font-size: 75%;
}

big {
  font-size: 125%;
}

.entry-title,
.entry-content,
.comments-title,
.comment-content,
.widget-title,
.widget {
  word-break: keep-all;
  word-wrap: break-word;
}

.screen-reader-text {
  height: auto;
  width: 0.0625rem;
  clip: rect(0.0625rem, 0.0625rem, 0.0625rem, 0.0625rem);
  height: 0.0625rem;
  overflow: hidden;
  position: absolute !important;
}

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  height: auto;
  width: auto;
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 0.125rem 0.125rem rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 0.875rem;
  font-weight: 700;
  left: 0.3125rem;
  line-height: normal;
  padding: 0.9375rem 1.4375rem 0.875rem;
  text-decoration: none;
  top: 0.3125rem;
  z-index: 100000;
}

.alignleft {
  display: inline;
  float: left;
  margin: 0 1.5rem 0 0;
}

.alignright {
  display: inline;
  float: right;
  margin: 0 0 0 1.5rem;
}

.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.clear::after,
.entry-content::after,
.comment-content::after,
.site-header::after,
.site-content::after,
.site-footer::after {
  clear: both;
  content: "";
  display: table;
}

embed,
iframe,
object {
  max-width: 100%;
}

hr {
  height: 1px;
  width: auto;
  background-color: #cccccc;
  border: 0;
  margin: 0 0 1.5rem 0;
}

figure {
  margin: 0;
}

ul,
ol {
  margin: 0 0 3rem 1.5rem;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

li > ul,
li > ol {
  margin: 0 0 0 1.5rem;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 1.5rem 1.5rem 0;
}

table {
  height: auto;
  width: 100%;
  margin: 0 0 1.5rem 0;
}

th {
  font-weight: 700;
}

.page-content img.wp-smiley,
.entry-content img.wp-smiley,
.comment-content img.wp-smiley {
  margin: 0;
  padding: 0;
  border: none;
}

img {
  height: auto;
  max-width: 100%;
}

.wp-caption {
  margin: 0 0 1.5rem 0;
  max-width: 100%;
}

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin: 0 auto;
}

.wp-caption.aligncenter {
  margin: 0 auto 1.5rem auto;
}

.wp-caption.alignleft {
  margin-right: 1.5rem;
}

.wp-caption.alignright {
  margin-left: 1.5rem;
}

.wp-caption .wp-caption-text {
  margin: 0.75rem 0;
}

.wp-caption-text {
  text-align: center;
}

.gallery {
  margin: 0 0 1.5rem 0;
}

.gallery-item {
  height: auto;
  width: 100%;
  display: inline-block;
  text-align: center;
  vertical-align: top;
}

.gallery-columns-2 .gallery-item {
  max-width: 50%;
}

.gallery-columns-3 .gallery-item {
  max-width: 33.33%;
}

.gallery-columns-4 .gallery-item {
  max-width: 25%;
}

.gallery-columns-5 .gallery-item {
  max-width: 20%;
}

.gallery-columns-6 .gallery-item {
  max-width: 16.66%;
}

.gallery-columns-7 .gallery-item {
  max-width: 14.28%;
}

.gallery-columns-8 .gallery-item {
  max-width: 12.5%;
}

.gallery-columns-9 .gallery-item {
  max-width: 11.11%;
}

.gallery-caption {
  display: block;
}

.fluid-embed {
  height: 0;
  overflow: hidden;
  padding-bottom: 56.25%;
  position: relative;
}

.fluid-embed embed,
.fluid-embed object,
.fluid-embed iframe {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.svg-defs {
  display: none;
}

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.not-ready {
  opacity: 0;
  transition: all 0.5s ease;
  visibility: hidden;
}

body.ready .not-ready {
  opacity: 1;
  visibility: visible;
}

.wrap {
  max-width: 60em;
  margin-left: auto;
  margin-right: auto;
  padding: 0 1.5em;
}

.wrap::after {
  clear: both;
  content: "";
  display: table;
}

.site-content {
  margin: 1.25rem auto;
}

.primary {
  width: 100%;
}

.secondary {
  width: 100%;
}

.site-title {
  font-size: 3rem;
}

.site-description {
  font-size: 1.5rem;
  margin: 0 0 1.5rem 0;
}

a {
  color: #21759b;
}

a:visited {
  color: #21759b;
}

a:hover, a:focus, a:active {
  color: #21759b;
}

.menu-toggle {
  display: block;
}

.menu-toggle .icon {
  height: 0.875rem;
  width: 0.75rem;
  display: inline-block;
  fill: #ffffff;
  margin-right: 0.3125rem;
  vertical-align: middle;
}

.menu-toggle .menu-toggle-text {
  display: inline-block;
  vertical-align: middle;
}

.main-navigation {
  height: auto;
  width: 100%;
  clear: both;
  display: block;
  float: left;
}

.main-navigation ul {
  display: none;
}

.main-navigation.toggled ul {
  display: block;
}

.menu {
  margin: 0;
  padding: 0;
  list-style: none;
}

.menu::after {
  clear: both;
  content: "";
  display: table;
}

.menu li {
  margin: 0 0.625rem 0 0;
}

.menu ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.menu ul::after {
  clear: both;
  content: "";
  display: table;
}

.menu.menu-horizontal li {
  display: inline-block;
}

.menu.menu-vertical li {
  margin: 0;
}

.menu.menu-vertical a {
  border-bottom: 1px solid #cccccc;
  padding: 0.625rem;
}

.menu.dropdown ul {
  position: absolute;
  top: 1.5rem;
  left: -624.9375rem;
  background-color: #ffffff;
  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);
  float: left;
  padding: 0.5rem;
  z-index: 99999;
}

.menu.dropdown ul ul {
  left: -624.9375rem;
  top: 0;
}

.menu.dropdown ul li:hover > ul,
.menu.dropdown ul li.focus > ul {
  left: 100%;
}

.menu.dropdown ul a {
  height: auto;
  width: 12.5rem;
}

.menu.dropdown li:hover > ul,
.menu.dropdown li.focus > ul {
  left: auto;
}

.menu.dropdown li {
  float: left;
  position: relative;
}

.menu a {
  display: block;
  text-decoration: none;
}

.site-main .comment-navigation, .site-main
.posts-navigation, .site-main
.post-navigation {
  margin: 0 0 1.5rem 0;
  overflow: hidden;
}

.comment-navigation .nav-previous,
.posts-navigation .nav-previous,
.post-navigation .nav-previous {
  height: auto;
  width: 50%;
  float: left;
}

.comment-navigation .nav-next,
.posts-navigation .nav-next,
.post-navigation .nav-next {
  height: auto;
  width: 50%;
  float: right;
  text-align: right;
}

.entry-title {
  font-size: 2.25rem;
}

.sticky {
  display: block;
}

.hentry {
  margin: 0 0 1.5rem 0;
}

.byline,
.updated:not(.published) {
  display: none;
}

.single .byline,
.group-blog .byline {
  display: inline;
}

.page-content,
.entry-content,
.entry-summary {
  margin: 1.5rem 0 0;
}

.page-links {
  clear: both;
  margin: 0 0 1.5rem 0;
}

.edit-link {
  margin: 0 1.5rem;
}

.blog .format-aside .entry-title,
.archive .format-aside .entry-title {
  display: none;
}

button,
input,
select,
textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: none;
  background-color: #666666;
  border: none;
  border-radius: 0;
  color: #ffffff;
  min-height: 1.9375rem;
  vertical-align: top;
}

button:hover,
input[type="button"]:hover,
input[type="reset"]:hover,
input[type="submit"]:hover {
  background-color: #333333;
}

button:active, button:focus,
input[type="button"]:active,
input[type="button"]:focus,
input[type="reset"]:active,
input[type="reset"]:focus,
input[type="submit"]:active,
input[type="submit"]:focus {
  background-color: #333333;
}

input[type="checkbox"],
input[type="radio"] {
  padding: 0;
}

input[type="text"]::-ms-clear,
input[type="search"]::-ms-clear {
  display: none;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
  -webkit-appearance: none;
  color: #666666;
  border: 1px solid #cccccc;
  border-radius: 0;
  line-height: 1.45;
  padding: 0.1875rem 0.3125rem;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="number"]:focus,
input[type="tel"]:focus,
input[type="range"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="week"]:focus,
input[type="time"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="color"]:focus,
textarea:focus {
  color: #111111;
}

textarea {
  height: auto;
  width: 100%;
  overflow: auto;
  vertical-align: top;
}

.comments-title {
  font-size: 1.5rem;
}

.comment-list {
  list-style: none;
  margin: 0;
}

.comment-meta {
  margin: 0 0 0.875rem 0;
}

.avatar {
  float: left;
  margin: 0 0.625rem 0 0;
}

.bypostauthor {
  display: block;
}

.social-icons {
  margin: 0 auto;
  padding: 0;
  text-align: center;
}

.social-icons .social-icon {
  display: inline-block;
  margin-right: 0.75rem;
  vertical-align: top;
}

.social-icons .social-icon .icon-facebook {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-facebook:hover {
  fill: #3b5998;
}

.social-icons .social-icon .icon-facebook-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-facebook-square:hover {
  fill: #3b5998;
}

.social-icons .social-icon .icon-googleplus {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-googleplus:hover {
  fill: #dd4b39;
}

.social-icons .social-icon .icon-googleplus-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-googleplus-square:hover {
  fill: #dd4b39;
}

.social-icons .social-icon .icon-instagram {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-instagram:hover {
  fill: #517fa4;
}

.social-icons .social-icon .icon-linkedin {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-linkedin:hover {
  fill: #007bb6;
}

.social-icons .social-icon .icon-linkedin-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-linkedin-square:hover {
  fill: #007bb6;
}

.social-icons .social-icon .icon-pinterest {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-pinterest:hover {
  fill: #cb2027;
}

.social-icons .social-icon .icon-pinterest-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-pinterest-square:hover {
  fill: #cb2027;
}

.social-icons .social-icon .icon-rss {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-rss:hover {
  fill: #ff9900;
}

.social-icons .social-icon .icon-rss-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-rss-square:hover {
  fill: #ff9900;
}

.social-icons .social-icon .icon-twitter {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-twitter:hover {
  fill: #00aced;
}

.social-icons .social-icon .icon-twitter-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-twitter-square:hover {
  fill: #00aced;
}

.social-icons .social-icon .icon-youtube {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-youtube:hover {
  fill: #bb0000;
}

.social-icons .social-icon .icon-youtube-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-youtube-square:hover {
  fill: #bb0000;
}

.social-icons .social-icon:last-child {
  margin-right: 0;
}

.contributors {
  margin: 0;
  padding: 0;
  list-style: none;
}

.contributors::after {
  clear: both;
  content: "";
  display: table;
}

.contributors .contributor {
  float: left;
  margin-bottom: 0.75em;
}

.contributors .contributor::after {
  clear: both;
  content: "";
  display: table;
}

.contributors .contributor .avatar {
  height: 4rem;
  width: 4rem;
  border-radius: 50%;
  opacity: 0.5;
  transition: all 0.2s ease-in-out;
}

.contributors .contributor .avatar:hover {
  opacity: 1;
}

.infinite-scroll .posts-navigation,
.infinite-scroll.neverending .site-footer {
  display: none;
}

.infinity-end.neverending .site-footer {
  display: block;
}

.gform_wrapper {
  background: #ffffff;
  border: 0 solid #ffffff;
  padding: 0;
}

.gform_wrapper .gform_body .gform_fields .gfield,
.gform_wrapper .gform_body .gform_fields .gfield.gf_left_half,
.gform_wrapper .gform_body .gform_fields .gfield.gf_right_half {
  margin-bottom: 1.5625rem;
}

.gform_wrapper .gfield_label {
  color: #333333;
  font-size: 1rem;
  font-weight: 700;
}

.gform_wrapper input[type="text"],
.gform_wrapper input[type="url"],
.gform_wrapper input[type="email"],
.gform_wrapper input[type="tel"],
.gform_wrapper input[type="number"],
.gform_wrapper input[type="password"],
.gform_wrapper input[type="file"],
.gform_wrapper textarea {
  background: #ffffff;
}

.gform_wrapper textarea {
  width: 100%;
}

.gform_wrapper select {
  background: url(assets/images/svg-icons/caret-down.svg) no-repeat 97% transparent;
  background-color: #ffffff;
  background-size: 0.75rem;
  border-color: #cccccc;
  border-radius: 0;
  line-height: 1.45;
  padding: 0.1875rem 0.3125rem;
  -webkit-appearance: none;
  width: 100%;
}

.gform_wrapper select[multiple="multiple"] {
  background: #ffffff;
}

.gform_wrapper .gform_body .gform_fields .gfield select,
.gform_wrapper.gf_browser_chrome .gform_body .gform_fields .gfield select {
  margin-left: 0;
  width: 100% !important;
}

.gform_wrapper .gfield .chosen-container-single {
  font-size: 1rem;
}

.gform_wrapper .gfield .chosen-container-single .chosen-single {
  background: #ffffff;
  border-color: #cccccc;
  border-radius: 0;
  height: auto;
  padding: 0.1875rem 0.3125rem;
}

.gform_wrapper .gfield .chosen-container-single .chosen-single div b {
  position: absolute;
  top: 40%;
  right: 0.6875rem;
  height: 0;
  width: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid #cccccc;
  background: none;
}

.gform_wrapper .gfield .chosen-container-single .chosen-drop .chosen-search input[type="text"] {
  background: none;
}

.gform_wrapper .gfield .chosen-container-single .chosen-drop .chosen-results li {
  padding: 0.625rem 0.3125rem;
}

.gform_wrapper .gfield .chosen-container-single.chosen-container-single.chosen-with-drop .chosen-single {
  background-image: none;
}

.gform_wrapper .gfield .chosen-container-single.chosen-container-single.chosen-with-drop .chosen-single div b {
  border: none;
  height: 0;
  width: 0;
  border-bottom: 6px solid #cccccc;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
}

#content .gform_wrapper {
  margin-right: 0;
  max-width: 100%;
}

#content .gform_wrapper input[type="text"],
#content .gform_wrapper input[type="url"],
#content .gform_wrapper input[type="email"],
#content .gform_wrapper input[type="tel"],
#content .gform_wrapper input[type="number"],
#content .gform_wrapper input[type="password"],
#content .gform_wrapper input[type="file"],
#content .gform_wrapper textarea {
  padding: 0.1875rem 0.3125rem;
  width: 100%;
}

#content .gform_wrapper .chosen-search input[type="text"],
#content .gform_wrapper textarea {
  width: 100%;
}

#content .gform_wrapper .gf_left_half,
#content .gform_wrapper .gf_right_half {
  width: 100%;
}

#content .gform_wrapper .ginput_complex .name_first input[type="text"],
#content .gform_wrapper .ginput_complex .name_last input[type="text"] {
  width: 100%;
}

.widget {
  margin: 0 0 1.5rem;
}

.widget select {
  max-width: 100%;
}

.widget_search .search-submit {
  display: none;
}

@media screen and (min-width: 40rem) {
  .menu-toggle {
    display: none;
  }
  .main-navigation ul {
    display: block;
  }
  .gform_wrapper select {
    width: 49%;
  }
  .gform_wrapper .gform_body .gform_fields .gfield select,
  .gform_wrapper.gf_browser_chrome .gform_body .gform_fields .gfield select {
    width: 49% !important;
  }
  #content .gform_wrapper input[type="text"],
  #content .gform_wrapper input[type="url"],
  #content .gform_wrapper input[type="email"],
  #content .gform_wrapper input[type="tel"],
  #content .gform_wrapper input[type="number"],
  #content .gform_wrapper input[type="password"],
  #content .gform_wrapper input[type="file"],
  #content .gform_wrapper textarea {
    width: 49%;
  }
  #content .gform_wrapper .gf_left_half,
  #content .gform_wrapper .gf_right_half {
    width: 49%;
  }
  #content .gform_wrapper .gf_left_half input[type="text"],
  #content .gform_wrapper .gf_left_half input[type="url"],
  #content .gform_wrapper .gf_left_half input[type="email"],
  #content .gform_wrapper .gf_left_half input[type="tel"],
  #content .gform_wrapper .gf_left_half input[type="number"],
  #content .gform_wrapper .gf_left_half input[type="password"],
  #content .gform_wrapper .gf_left_half input[type="file"],
  #content .gform_wrapper .gf_right_half input[type="text"],
  #content .gform_wrapper .gf_right_half input[type="url"],
  #content .gform_wrapper .gf_right_half input[type="email"],
  #content .gform_wrapper .gf_right_half input[type="tel"],
  #content .gform_wrapper .gf_right_half input[type="number"],
  #content .gform_wrapper .gf_right_half input[type="password"],
  #content .gform_wrapper .gf_right_half input[type="file"] {
    width: 100%;
  }
  #content .gform_wrapper .gf_left_half {
    margin-right: 2%;
  }
}

@media screen and (min-width: 64rem) {
  .site-header,
  .site-footer {
    padding: 0 1.5em;
  }
  .primary {
    float: left;
    display: block;
    margin-right: 1.25%;
    width: 66.25%;
  }
  .primary:last-child {
    margin-right: 0;
  }
  .secondary {
    float: left;
    display: block;
    margin-right: 1.25%;
    width: 32.5%;
  }
  .secondary:last-child {
    margin-right: 0;
  }
  .social-icons {
    float: left;
    text-align: left;
  }
}

@media screen and (min-width: 85.375rem) {
  .wrap {
    padding: 0;
  }
  .site-content {
    margin: 2.5rem auto 3.75rem;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
